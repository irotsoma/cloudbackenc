group "com.irotsoma.cloudbackenc"
version "0.1-SNAPSHOT"

buildscript {
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.kotlinVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    }

}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "spring-boot"
apply plugin: "propdeps"

repositories {
    mavenCentral()
}

dependencies {
    //spring deps
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework:spring-context"
    optional "org.springframework.boot:spring-boot-configuration-processor"
    //cloud service interfaces
    compile project(":cloudservice")
    compile project(":common")
    //jackson
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.0"
    compile "com.fasterxml.jackson.core:jackson-core:2.8.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.8.0"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.8.0"
    //kotlin lib
    compile "org.jetbrains.kotlin:kotlin-stdlib:${project.kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${project.kotlinVersion}"
    //testing deps
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "junit:junit"

}
compileJava.dependsOn(processResources)

processResources {
    expand(project.properties)
}

springBoot {
    executable = true
}

apply plugin: "maven-publish"
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url project.localMavenRepository
        }
    }
}